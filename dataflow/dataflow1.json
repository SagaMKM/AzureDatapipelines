{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DataLakeKunta",
						"type": "DatasetReference"
					},
					"name": "DataLakeKunnat"
				},
				{
					"dataset": {
						"referenceName": "DataLakeValtio",
						"type": "DatasetReference"
					},
					"name": "DataLakeValtio"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TransformedData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "select1"
				},
				{
					"name": "SortByAmmattinimike"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Ammattinimike as string,",
				"          Sukupuoli as string,",
				"          {2022 Kuukausipalkkaiset yhteens�} as string,",
				"          {2022 Kokoaikaisten lukum��r�} as string,",
				"          {2022 Osa-aikaisten lukum��r�} as string,",
				"          {2022 Peruspalkan keskiarvo, e/kk} as string,",
				"          {2022 S��nn�llisen ty�ajan ansion keskiarvo, e/kk} as string,",
				"          {2022 S��nn�llisen ty�ajan ansion 1.desiili, e/kk} as string,",
				"          {2022 S��nn�llisen ty�ajan ansion mediaani, e/kk} as string,",
				"          {2022 S��nn�llisen ty�ajan ansion 9.desiili, e/kk} as string,",
				"          {2022 S��nn�llisen ty�ajan ansion variaatiokerroin, %} as string,",
				"          {2022 Kokonaisansion keskiarvo, e/kk} as string,",
				"          {2022 Kokonaisansion 1.desiili, e/kk} as string,",
				"          {2022 Kokonaisansion mediaani, e/kk} as string,",
				"          {2022 Kokonaisansion 9.desiili, e/kk} as string,",
				"          {2022 Kokonaisansion variaatiokerroin, %} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DataLakeKunnat",
				"source(output(",
				"          Vuosi as string,",
				"          Ammattinimike as string,",
				"          Sukupuoli as string,",
				"          {Palkansaajat yhteens�} as string,",
				"          {Kokoaikaisten lukum��r�} as string,",
				"          {Osa-aikaisten lukum��r�} as string,",
				"          {S��nn�llisen ty�ajan ansion keskiarvo} as string,",
				"          { e/kk7} as string,",
				"          {S��nn�llisen ty�ajan ansion 1.desiili} as string,",
				"          { e/kk9} as string,",
				"          {S��nn�llisen ty�ajan ansion mediaani} as string,",
				"          { e/kk11} as string,",
				"          {S��nn�llisen ty�ajan ansion 9.desiili} as string,",
				"          { e/kk13} as string,",
				"          {S��nn�llisen ty�ajan ansion variaatiokerroin} as string,",
				"          { %15} as string,",
				"          {Kokonaisansion keskiarvo} as string,",
				"          { e/kk17} as string,",
				"          {Kokonaisansion 1.desiili} as string,",
				"          { e/kk19} as string,",
				"          {Kokonaisansion mediaani} as string,",
				"          { e/kk21} as string,",
				"          {Kokonaisansion 9.desiili} as string,",
				"          { e/kk23} as string,",
				"          {Kokonaisansion variaatiokerroin} as string,",
				"          { %25} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DataLakeValtio",
				"DataLakeValtio, DataLakeKunnat union(byName: true)~> union1",
				"union1 select(mapColumn(",
				"          Ammattinimike,",
				"          Sukupuoli,",
				"          Kokoaikaiset = {Kokoaikaisten lukum��r�},",
				"          {Osa-aikaiset} = {Osa-aikaisten lukum��r�},",
				"          {Osa-aikaiset} = {2022 Osa-aikaisten lukum��r�},",
				"          Kokoaikaiset = {2022 Kokoaikaisten lukum��r�},",
				"          {Kokonaisansion mediaani} = {2022 Kokonaisansion mediaani},",
				"          {Kokonaisansion mediaani}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sort(asc(Ammattinimike, true)) ~> SortByAmmattinimike",
				"SortByAmmattinimike derive(Sukupuoli = iif(Sukupuoli == 'Yhteens�', 'Miehet ja Naiset Yhteensä', Sukupuoli)) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}